/* eslint-env browser, jest */

// This map is generated by scripts/generate-marko-module-map.js
// which allows Jest to mock Marko's browser-side dependencies (browser field from pakacge.json) on server/Node.js env.
const markoModulesMockingMap = require('./marko-modules-mocking-map');

// load Marko's browser-field dependecies on Node.js. This is done in order to load browser-side modules on server-side
function loadMarkoBrowserDependencies() {
  Object.keys(markoModulesMockingMap).forEach(moduleToMock => {
    jest.mock(moduleToMock, () => require.requireActual(markoModulesMockingMap[moduleToMock]));
  });
}

/* eslint global-require: 1 */
/* eslint import/no-dynamic-require: 1 */
exports.initComponent = function initComponent(componentFullPath) {
  loadMarkoBrowserDependencies();

  // require the component to test
  // eslint-disable-next-line import/no-dynamic-require, global-require
  const component = require(componentFullPath);

  // init marko component
  // eslint-disable-next-line global-require
  require('marko/components').init();

  return component;
};

exports.createTestSandbox = function createTestSandbox() {
  const el = document.createElement('div');
  el.id = 'test-sandbox';
  document.body.appendChild(el);

  return {
    el,

    /**
     * Render component into sandbox
     */
    renderComponent(component, input) {
      return component.render(input)
        .then((result) => {
          result.appendTo(this.el);
          return result.getComponent();
        });
    },

    /**
     * Remove test component from sandbox from DOM
     */
    reset() {
      document.body.removeChild(this.el);
    },
  };
};
